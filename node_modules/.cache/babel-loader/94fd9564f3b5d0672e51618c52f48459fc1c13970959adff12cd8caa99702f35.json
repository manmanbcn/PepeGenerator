{"ast":null,"code":"var _jsxFileName = \"/Users/anatoly/Desktop/coding/projects/my-app/src/components/CharacterRandomGenerator.js\";\nimport React, { useState } from 'react';\nimport { eyesData } from '../eyes.js';\nimport { lipsData } from '../lips.js';\nimport { handsData } from '../hands.js';\nimport { decalData } from '../decal.js';\nimport '../CharacterRandom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharacterGenerator = ({\n  onClickEyes,\n  onClickLips,\n  onClickHands,\n  onClickDecal\n}) => {\n  const randomGenerator = arr => {\n    let random = Math.floor(Math.random() * arr.length);\n    return arr[random];\n  };\n  const handlerGenerator = () => {\n    let randomEyesIndex = randomGenerator(eyesData);\n    let randomLipsIndex = randomGenerator(lipsData);\n    let randomDecalIndex = randomGenerator(decalData);\n    let randomHandsIndex = randomGenerator(handsData);\n    onClickEyes(randomEyesIndex.url);\n    onClickLips(randomLipsIndex.url);\n    onClickDecal(randomDecalIndex.url);\n    onClickHands(randomHandsIndex.url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: handlerGenerator,\n    className: \"random-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random-link-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"random-link-text-button\",\n        children: \"Random Pepe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"random-link-img\",\n        src: \"src/assets/random.png\",\n        alt: \"Random\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = CharacterGenerator;\nexport { CharacterGenerator };\nvar _c;\n$RefreshReg$(_c, \"CharacterGenerator\");","map":{"version":3,"names":["React","useState","eyesData","lipsData","handsData","decalData","jsxDEV","_jsxDEV","CharacterGenerator","onClickEyes","onClickLips","onClickHands","onClickDecal","randomGenerator","arr","random","Math","floor","length","handlerGenerator","randomEyesIndex","randomLipsIndex","randomDecalIndex","randomHandsIndex","url","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/anatoly/Desktop/coding/projects/my-app/src/components/CharacterRandomGenerator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {eyesData} from '../eyes.js';\nimport {lipsData} from '../lips.js';\nimport {handsData} from '../hands.js';\nimport {decalData} from '../decal.js';\nimport '../CharacterRandom.css';\n\n\nconst CharacterGenerator = ({ onClickEyes, onClickLips, onClickHands, onClickDecal }) => {\n\nconst randomGenerator = (arr) => {\n  let random = Math.floor(Math.random() * arr.length);\n  return arr[random];\n}\n\nconst handlerGenerator = () => {\n  let randomEyesIndex  = randomGenerator(eyesData);\n  let randomLipsIndex  = randomGenerator(lipsData);\n  let randomDecalIndex  = randomGenerator(decalData);\n  let randomHandsIndex  = randomGenerator(handsData);\n\n  onClickEyes(randomEyesIndex.url);\n  onClickLips(randomLipsIndex.url);\n  onClickDecal(randomDecalIndex.url);\n  onClickHands(randomHandsIndex.url);\n}\n\nreturn (\n    <div onClick={handlerGenerator} className=\"random-wrapper\">\n      <div className=\"random-link-text\">\n          <span className=\"random-link-text-button\">Random Pepe</span>\n          <img className=\"random-link-img\" src=\"src/assets/random.png\" alt=\"Random\" />\n        </div>\n    </div>\n);\n\n};\n\n\n\nexport {CharacterGenerator};\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,QAAQ,QAAO,YAAY;AACnC,SAAQC,QAAQ,QAAO,YAAY;AACnC,SAAQC,SAAS,QAAO,aAAa;AACrC,SAAQC,SAAS,QAAO,aAAa;AACrC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhC,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,WAAW;EAAEC,WAAW;EAAEC,YAAY;EAAEC;AAAa,CAAC,KAAK;EAEzF,MAAMC,eAAe,GAAIC,GAAG,IAAK;IAC/B,IAAIC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,CAAC,CAAC,GAAGD,GAAG,CAACI,MAAM,CAAC;IACnD,OAAOJ,GAAG,CAACC,MAAM,CAAC;EACpB,CAAC;EAED,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIC,eAAe,GAAIP,eAAe,CAACX,QAAQ,CAAC;IAChD,IAAImB,eAAe,GAAIR,eAAe,CAACV,QAAQ,CAAC;IAChD,IAAImB,gBAAgB,GAAIT,eAAe,CAACR,SAAS,CAAC;IAClD,IAAIkB,gBAAgB,GAAIV,eAAe,CAACT,SAAS,CAAC;IAElDK,WAAW,CAACW,eAAe,CAACI,GAAG,CAAC;IAChCd,WAAW,CAACW,eAAe,CAACG,GAAG,CAAC;IAChCZ,YAAY,CAACU,gBAAgB,CAACE,GAAG,CAAC;IAClCb,YAAY,CAACY,gBAAgB,CAACC,GAAG,CAAC;EACpC,CAAC;EAED,oBACIjB,OAAA;IAAKkB,OAAO,EAAEN,gBAAiB;IAACO,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eACxDpB,OAAA;MAAKmB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC7BpB,OAAA;QAAMmB,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5DxB,OAAA;QAAKmB,SAAS,EAAC,iBAAiB;QAACM,GAAG,EAAC,uBAAuB;QAACC,GAAG,EAAC;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGV,CAAC;AAACG,EAAA,GA5BI1B,kBAAkB;AAgCxB,SAAQA,kBAAkB;AAAE,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}